<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration>

<configuration debug="true">
    <!-- 上下文名称:应用名称_实例号 , 用于一个虚拟机部署两个tesla应用时区分应用,同时logback的jmx目录就是以contextName命名 -->
    <contextName>${maven.app-name}</contextName>

    <!-- 使用maven profile替换logHome -->
    <property name="logHome" value="${maven.log-home}/${CONTEXT_NAME}" scope="context"/>

    <!-- JMX监控 -->
    <jmxConfigurator/>

    <!-- 控制台日志 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern><![CDATA[
				%n%-4r %d{yyyy-MM-dd HH:mm:ss.SSS} %thread %X{productionMode} %X{method} %X{requestURIWithQueryString} [f=%X{functionId}, tid=%X{transactionId}, ip=%X{remoteAddr}, sid=%X{cookie.JSESSIONID}]%n %-5level %logger{35} - %m%n
            ]]></pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 错误及警告日志 -->
    <appender name="ERROR_WARN"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logHome}/%d{yyyy-MM-dd}/error_warn_%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>5MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <Pattern>%n%-4r %d{yyyy-MM-dd HH:mm:ss.SSS} %thread %X{productionMode} %X{method}
                %X{requestURIWithQueryString} %X{functionId} %X{transactionId} [ip=%X{remoteAddr}, ref=%X{referrer},
                ua=%X{userAgent}, sid=%X{cookie.JSESSIONID}]%n %-5level %logger{35} - %m%n
            </Pattern>
        </encoder>
    </appender>

    <!--================== 第三方logger级别配置 begin ================== -->
    <!--====== sql log begin ====== -->
    <logger name="java.sql">
        <level value="${maven.sql-log-level}"/>
    </logger>

    <logger name="org.mybatis">
        <level value="${maven.sql-log-level}"/>
    </logger>

    <logger name="sqlLog">
        <level value="${maven.sql-log-level}"/>
    </logger>
    <!--======= sql log end ======= -->

    <logger name="org.apache">
        <level value="ERROR"/>
    </logger>

    <logger name="org.castor">
        <level value="ERROR"/>
    </logger>

    <logger name="org.exolab.castor">
        <level value="ERROR"/>
    </logger>

    <logger name="org.springframework">
        <level value="${maven.log-level}"/>
    </logger>

    <logger name="com.alibaba.citrus.springext.support.context">
        <level value="${maven.log-level}"/>
    </logger>

    <logger name="org.eclipse.jetty">
        <level value="${maven.log-level}"/>
    </logger>

    <logger name="org.glassfish.jersey">
        <level value="${maven.log-level}"/>
    </logger>
    <!--================== 第三方logger配置 end ================== -->

    <!-- 根配置 -->
    <root level="${maven.log-level}">
        <!-- 注意: 请在上生产或性能测试前将CONSOLE appender-ref注释掉 -->
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ERROR_WARN"/>
    </root>
</configuration>